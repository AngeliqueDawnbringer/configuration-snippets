#   Default SSL settings for OpenSSL v3. These settings will not work with 1.1.1. Please note that you have to build NGINX against 3.0 to make this work
#    ssl_dhparam                 /etc/nginx/ssl/dh4k.pem; # For if you really want to use Diffie Hellman for Forward Secrecy

#    ssl_session_cache           builtin:1000  shared:SSL:2m;
    ssl_session_cache           shared:SSL:10m;
    ssl_session_timeout         5m;
    ssl_protocols               TLSv1.3 TLSv1.2; # Note that I explicitely only enable these protocols.
#    ssl_protocols -SSLv2 -SSLv3 -TLSv1 -TLSv1.1; # Doesn't work for NGINX you can only do this in Apache
    ssl_prefer_server_ciphers   on;
 

#    ssl_ecdh_curve              secp384r1;
#    ssl_ecdh_curve              secp521r1;
#    ssl_ecdh_curve              secp521r1:secp384r1:X25519;
#    ssl_ecdh_curve              X25519:secp521r1:secp384r1;
    ssl_ecdh_curve              secp521r1:secp384r1;
#    Experimenting line with Poly etc
#    Use openssl ciphers  'EECDH+AESGCM:EDH+AESGCM:!DH:!RSA:!AES128' to generate the next line. Please not that 3.0 has different names. It is good practive to just regenerate the list to not get skewed between available items.
    ssl_ciphers                 TLS_CHACHA20_POLY1305_SHA256:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-ARIA256-GCM-SHA384:TLS_AES_256_GCM_SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-CCM8:ECDHE-ECDSA-AES256-CCM;
#    ssl_ciphers                 TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA;
    #If you need Camilla and Diffie Hellman, use the next line instead. (Basically same command just remove the ! in front of DH.
#    ssl_ciphers                 TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305-D:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-CHACHA20-POLY1305-D::ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-SHA256:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-RSA-CAMELLIA256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-RSA-CAMELLIA256-SHA:ECDH-RSA-AES256-SHA;

#   My Current configuration With all its additional flavours for when stuff is recompiled or compiled against older versions of stuff. Note that the selector for TLS 1.3 doesnt actually work with OpenSSL1.1.1!
#    ssl_ciphers                 TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS_AES_256_GCM_SHA384:TLS-AES-256-GCM-SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS-CHACHA20-POLY1305-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA;

#   This section is required to remove the 128 bit key for OpenSSL v3
    ssl_conf_command Ciphersuites TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384;

    ssl_stapling                on;
    ssl_stapling_verify         on;

    add_header                  Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always; # Dangerous setting if you don't know what this does and risk is involved
    resolver                    8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout            10s;
